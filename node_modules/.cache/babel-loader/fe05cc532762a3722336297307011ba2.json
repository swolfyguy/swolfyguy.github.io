{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maheshkokare/excel_processing_FE/src/components/ImportFile.jsx\";\nimport React from \"react\";\nimport { Upload, message, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport readXlsxFile from \"read-excel-file\";\n\nconst getProps = (setColumns, setDataSource) => ({\n  name: \"file\",\n\n  //action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  //   headers: {\n  //     authorization: \"authorization-text\",\n  //   },\n  onChange(info) {\n    if (info.file.status === \"done\") {} else if (info.file.status === \"error\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n      readXlsxFile(info.file.originFileObj).then(rows => {\n        const [column, ...data] = rows;\n        const columns = column.map(c => ({\n          title: c,\n          dataIndex: c,\n          width: 100\n        }));\n        setColumns([{\n          title: \"S.No\",\n          dataIndex: \"index\"\n        }, ...columns]);\n        setDataSource(data.map((r, j) => {\n          const row = {\n            index: j + 1\n          };\n          columns.forEach((c, i) => {\n            row[c.title] = r[i];\n          });\n          return row;\n        }));\n      });\n    }\n  },\n\n  accept: \".xlsx, .xls\",\n  showUploadList: false\n});\n\nconst ImportFile = ({\n  setColumns,\n  setDataSource\n}) => {\n  return /*#__PURE__*/_jsxDEV(Upload, { ...getProps(setColumns, setDataSource),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this),\n      children: \"Click to Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ImportFile;\nexport default ImportFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportFile\");","map":{"version":3,"sources":["/Users/maheshkokare/excel_processing_FE/src/components/ImportFile.jsx"],"names":["React","Upload","message","Button","UploadOutlined","readXlsxFile","getProps","setColumns","setDataSource","name","onChange","info","file","status","success","originFileObj","then","rows","column","data","columns","map","c","title","dataIndex","width","r","j","row","index","forEach","i","accept","showUploadList","ImportFile"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,MAAxC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,UAAD,EAAaC,aAAb,MAAgC;AAC/CC,EAAAA,IAAI,EAAE,MADyC;;AAE/C;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,QAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC,CAChC,CADD,MACO,IAAIF,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvCX,MAAAA,OAAO,CAACY,OAAR,CAAiB,GAAEH,IAAI,CAACC,IAAL,CAAUH,IAAK,6BAAlC;AACAJ,MAAAA,YAAY,CAACM,IAAI,CAACC,IAAL,CAAUG,aAAX,CAAZ,CAAsCC,IAAtC,CAA4CC,IAAD,IAAU;AACnD,cAAM,CAACC,MAAD,EAAS,GAAGC,IAAZ,IAAoBF,IAA1B;AACA,cAAMG,OAAO,GAAGF,MAAM,CAACG,GAAP,CAAYC,CAAD,KAAQ;AACjCC,UAAAA,KAAK,EAAED,CAD0B;AAEjCE,UAAAA,SAAS,EAAEF,CAFsB;AAGjCG,UAAAA,KAAK,EAAE;AAH0B,SAAR,CAAX,CAAhB;AAKAlB,QAAAA,UAAU,CAAC,CAAC;AAAEgB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,SAAS,EAAE;AAA5B,SAAD,EAAwC,GAAGJ,OAA3C,CAAD,CAAV;AACAZ,QAAAA,aAAa,CACXW,IAAI,CAACE,GAAL,CAAS,CAACK,CAAD,EAAIC,CAAJ,KAAU;AACjB,gBAAMC,GAAG,GAAG;AAAEC,YAAAA,KAAK,EAAEF,CAAC,GAAG;AAAb,WAAZ;AACAP,UAAAA,OAAO,CAACU,OAAR,CAAgB,CAACR,CAAD,EAAIS,CAAJ,KAAU;AACxBH,YAAAA,GAAG,CAACN,CAAC,CAACC,KAAH,CAAH,GAAeG,CAAC,CAACK,CAAD,CAAhB;AACD,WAFD;AAGA,iBAAOH,GAAP;AACD,SAND,CADW,CAAb;AASD,OAjBD;AAkBD;AACF,GA7B8C;;AA8B/CI,EAAAA,MAAM,EAAE,aA9BuC;AA+B/CC,EAAAA,cAAc,EAAE;AA/B+B,CAAhC,CAAjB;;AAkCA,MAAMC,UAAU,GAAG,CAAC;AAAE3B,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AACpD,sBACE,QAAC,MAAD,OAAYF,QAAQ,CAACC,UAAD,EAAaC,aAAb,CAApB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAM0B,U;AAQN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { Upload, message, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport readXlsxFile from \"read-excel-file\";\n\nconst getProps = (setColumns, setDataSource) => ({\n  name: \"file\",\n  //action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  //   headers: {\n  //     authorization: \"authorization-text\",\n  //   },\n  onChange(info) {\n    if (info.file.status === \"done\") {\n    } else if (info.file.status === \"error\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n      readXlsxFile(info.file.originFileObj).then((rows) => {\n        const [column, ...data] = rows;\n        const columns = column.map((c) => ({\n          title: c,\n          dataIndex: c,\n          width: 100,\n        }));\n        setColumns([{ title: \"S.No\", dataIndex: \"index\" }, ...columns]);\n        setDataSource(\n          data.map((r, j) => {\n            const row = { index: j + 1 };\n            columns.forEach((c, i) => {\n              row[c.title] = r[i];\n            });\n            return row;\n          })\n        );\n      });\n    }\n  },\n  accept: \".xlsx, .xls\",\n  showUploadList: false,\n});\n\nconst ImportFile = ({ setColumns, setDataSource }) => {\n  return (\n    <Upload {...getProps(setColumns, setDataSource)}>\n      <Button icon={<UploadOutlined />}>Click to Upload</Button>\n    </Upload>\n  );\n};\n\nexport default ImportFile;\n"]},"metadata":{},"sourceType":"module"}