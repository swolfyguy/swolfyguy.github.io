{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maheshkokare/excel_processing_FE/src/components/Grid/index.js\";\nimport React from \"react\";\nimport { Table, Button } from \"antd\";\nimport { EditableCell, EditableRow } from \"./EditableCell\";\n\nclass EditableTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.props.setDataSource(dataSource.filter(item => item.key !== key));\n    };\n\n    this.handleAdd = () => {\n      const {\n        dataSource,\n        columns\n      } = this.props;\n      const newData = {\n        key: dataSource.length\n      };\n      columns.forEach(item => {\n        newData[item.title] = dataSource[newData.key - 1][item.title];\n      });\n      newData[\"index\"] = newData.key + 1;\n      this.props.setDataSource([...dataSource, newData]);\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.props.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.props.setDataSource(newData);\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.props;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.props.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleAdd,\n        type: \"primary\",\n        style: {\n          marginBottom: 16\n        },\n        children: \"Add a row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        components: components,\n        rowClassName: () => \"editable-row\",\n        dataSource: dataSource,\n        columns: columns,\n        bordered: true,\n        pagination: true,\n        pageSize: 10,\n        scroll: {\n          x: 200,\n          y: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditableTable;","map":{"version":3,"sources":["/Users/maheshkokare/excel_processing_FE/src/components/Grid/index.js"],"names":["React","Table","Button","EditableCell","EditableRow","EditableTable","Component","handleDelete","key","dataSource","state","props","setDataSource","filter","item","handleAdd","columns","newData","length","forEach","title","handleSave","row","index","findIndex","splice","render","components","body","cell","map","col","editable","onCell","record","dataIndex","marginBottom","x","y"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Button } from \"antd\";\nimport { EditableCell, EditableRow } from \"./EditableCell\";\n\nclass EditableTable extends React.Component {\n  handleDelete = (key) => {\n    const dataSource = [...this.state.dataSource];\n    this.props.setDataSource(dataSource.filter((item) => item.key !== key));\n  };\n  handleAdd = () => {\n    const { dataSource, columns } = this.props;\n    const newData = {\n      key: dataSource.length,\n    };\n    columns.forEach((item) => {\n      newData[item.title] = dataSource[newData.key - 1][item.title];\n    });\n    newData[\"index\"] = newData.key + 1;\n    this.props.setDataSource([...dataSource, newData]);\n  };\n\n  handleSave = (row) => {\n    const newData = [...this.props.dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    this.props.setDataSource(newData);\n  };\n\n  render() {\n    const { dataSource } = this.props;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.props.columns.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    return (\n      <div>\n        <Button\n          onClick={this.handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          Add a row\n        </Button>\n        <Table\n          components={components}\n          rowClassName={() => \"editable-row\"}\n          dataSource={dataSource}\n          columns={columns}\n          bordered={true}\n          pagination={true}\n          pageSize={10}\n          scroll={{\n            x: 200,\n            y: 300,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EditableTable;\n"]},"metadata":{},"sourceType":"module"}