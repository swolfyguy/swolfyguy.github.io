{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maheshkokare/excel_processing_FE/src/components/ImportFile.jsx\";\nimport React from \"react\";\nimport { Upload, message, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport readXlsxFile from \"read-excel-file\";\nimport { getColumnSearchProps, sortDates } from \"../utils/helper\";\n\nconst getProps = (setColumns, setDataSource) => ({\n  name: \"file\",\n\n  //action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  //   headers: {\n  //     authorization: \"authorization-text\",\n  //   },\n  onChange(info) {\n    if (info.file.status === \"done\") {} else if (info.file.status === \"error\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n      readXlsxFile(info.file.originFileObj).then(rows => {\n        const [column, ...data] = rows;\n        const columns = column.map(c => ({\n          title: c,\n          dataIndex: c,\n          width: 200,\n          editable: true,\n          ...getColumnSearchProps(c),\n          key: c,\n          sorter: (a, b) => {\n            if (a instanceof Date) return sortDates(a, b);else if (Number(a)) return b - a;else b.toLowerCase() - a.toLowerCase();\n          }\n        }));\n        const dateIndices = [];\n        setDataSource(data.map((r, j) => {\n          const row = {\n            index: j + 1\n          };\n          columns.forEach((c, i) => {\n            row[c.title] = r[i] && r[i].toString();\n          });\n          return row;\n        }));\n        dateIndices.forEach(index => {\n          columns[index] = { ...columns[index],\n            sorter: sortDates\n          };\n        });\n        setColumns([{\n          title: \"S.No\",\n          dataIndex: \"index\",\n          width: 100\n        }, ...columns]);\n      });\n    }\n  },\n\n  accept: \".xlsx, .xls\",\n  showUploadList: false\n});\n\nconst ImportFile = ({\n  setColumns,\n  setDataSource\n}) => {\n  return /*#__PURE__*/_jsxDEV(Upload, { ...getProps(setColumns, setDataSource),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this),\n      children: \"Click to Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ImportFile;\nexport default ImportFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportFile\");","map":{"version":3,"sources":["/Users/maheshkokare/excel_processing_FE/src/components/ImportFile.jsx"],"names":["React","Upload","message","Button","UploadOutlined","readXlsxFile","getColumnSearchProps","sortDates","getProps","setColumns","setDataSource","name","onChange","info","file","status","success","originFileObj","then","rows","column","data","columns","map","c","title","dataIndex","width","editable","key","sorter","a","b","Date","Number","toLowerCase","dateIndices","r","j","row","index","forEach","i","toString","accept","showUploadList","ImportFile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Upload, message, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport readXlsxFile from \"read-excel-file\";\nimport { getColumnSearchProps, sortDates } from \"../utils/helper\";\n\nconst getProps = (setColumns, setDataSource) => ({\n  name: \"file\",\n  //action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  //   headers: {\n  //     authorization: \"authorization-text\",\n  //   },\n  onChange(info) {\n    if (info.file.status === \"done\") {\n    } else if (info.file.status === \"error\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n      readXlsxFile(info.file.originFileObj).then((rows) => {\n        const [column, ...data] = rows;\n        const columns = column.map((c) => ({\n          title: c,\n          dataIndex: c,\n          width: 200,\n          editable: true,\n          ...getColumnSearchProps(c),\n          key: c,\n          sorter: (a, b) => {\n            if (a instanceof Date) return sortDates(a, b);\n            else if (Number(a)) return b - a;\n            else b.toLowerCase() - a.toLowerCase();\n          },\n        }));\n        const dateIndices = [];\n        setDataSource(\n          data.map((r, j) => {\n            const row = { index: j + 1 };\n            columns.forEach((c, i) => {\n              row[c.title] = r[i] && r[i].toString();\n            });\n            return row;\n          })\n        );\n        dateIndices.forEach((index) => {\n          columns[index] = { ...columns[index], sorter: sortDates };\n        });\n        setColumns([\n          { title: \"S.No\", dataIndex: \"index\", width: 100 },\n          ...columns,\n        ]);\n      });\n    }\n  },\n  accept: \".xlsx, .xls\",\n  showUploadList: false,\n});\n\nconst ImportFile = ({ setColumns, setDataSource }) => {\n  return (\n    <Upload {...getProps(setColumns, setDataSource)}>\n      <Button icon={<UploadOutlined />}>Click to Upload</Button>\n    </Upload>\n  );\n};\n\nexport default ImportFile;\n"]},"metadata":{},"sourceType":"module"}